#include<stdio.h>
 
void knapsack(int n, float profit[], float weight[], int capacity, float object[])      
{
    float xi[20], total_profit=0,temp;              
    int i,j;
    for(i=0; i<n; i++)                             
    {  
       xi[i] = 0;
    }
    for(i=0; i<n; i++)                             
    {
        if(weight[i] > capacity)
        {
           break;
        }
        else
        {
             xi[i] = 1;
             total_profit = total_profit + profit[i];
             capacity = capacity - weight[i];
        }
    }
    if(i < n)                                               
    {
        xi[i] = capacity/weight[i];
    }
    total_profit = total_profit + (xi[i]*profit[i]);          
 
    for(i=0; i<n; i++)                       //sorting again on the basis of object array
   {
      for (j = i + 1; j < n; j++)    
       {               
              if(object[i] > object[j])      //sorting in ascending order
              {                 
                temp = object[j];   //swapping of object (numbering of elements) array elements
               object[j] = object[i];                 
	   object[i] = temp;
                temp = xi[j];    //swapping of xi (sequence of selected elements) array elements
                xi[j] = xi[i];
                xi[i] = temp;
               }    
     }
  }
 
    printf("\nThe knapsack sequence is:");         
    for(i=0; i<n; i++)
    {
        printf("%f\t", xi[i]);
    }
   printf("\nThe maximum profit of the given objects is: %f\n",total_profit);     
//printing maximum profit
}
 
int main()                     
{
   float object[20];            
   float profit[20];
   float weight[20];
   float ratio[20], temp;
   int capacity;
   int n,i,j;
    
   printf("Please enter the number of elements/objects:");                
   scanf("%d", &n);
   printf("Please enter the capacity of container:");    scanf("%d", &capacity);
   printf("Please enter number, weight and profit of objects:");
   for(i=0; i<n; i++)
   {
      scanf("%f %f %f", &object[i], &weight[i], &profit[i]);
   }
   for (i = 0; i < n; i++)            //taking ratio of profit/weight for every element using for loop
    {
      ratio[i] = profit[i] / weight[i];
    }
  
   for(i=0; i<n; i++)                       //sorting the elements on the basis of ratio
   {
      for (j = i + 1; j < n; j++)  
      {               
              if(ratio[i] < ratio[j])           //sorting in descending order
              {
                temp = ratio[j];              //swapping of ratio (of elements entered) array elements
                ratio[j] = ratio[i];
                ratio[i] = temp;
                 
                temp = weight[j];       //swapping of weight (of elements entered) array elements                 	    weight[j] = weight[i];
                weight[i] = temp;
                
                temp = profit[j];            //swapping of profit (of elements entered) array elements
                profit[j] = profit[i];
                profit[i] = temp;
 
                temp = object[j];   //swapping of object (numbering of elements) array elements
                object[j] = object[i];
                object[i] = temp;
               }    
    }
  }
  knapsack(n, profit, weight, capacity, object);              //function call   
   return 0;
 }
